apiVersion: v1
kind: Template
metadata:
  name: upsilon-on-openshift
  annotations:
    description: "Upsilon Project on OpenShift"
    tags: "instant-app"
parameters: 
- name: SYSTEM_ID
  description: The Upsilon System ID
  value: default
  required: true
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: upsilon-web
  spec:
    ports:
    - port: 80
      targetPort: 8080
    selector:
      deploymentconfig: upsilon-web
- apiVersion: v1
  kind: Service
  metadata:
    name: upsilon-drone
  spec:
    ports:
    - port: 4000
      targetPort: 4000
    selector:
      deploymentconfig: upsilon-drone
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: upsilon-drone
  spec:
    replicas: 1
    selector:
      deploymentconfig: upsilon-drone
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          deploymentconfig: upsilon-drone
      spec:
        containers:
        - image: upsilonproject/drone:latest
          name: upsilon-drone
          ports:
          - containerPort: 4000
            protocol: TCP
          env:
          - name: UPSILON_CONFIG_SYSTEM_AMQPHOST
            value: upsilon
          - name: UPSILON_IDENTIFIER
            value: unnamed-upsilon-drone 
          livenessProbe:
            httpGet:
              path: /
              port: 4000
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: upsilon-web
  spec:
    replicas: 1
    selector:
      deploymentconfig: upsilon-web
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          deploymentconfig: upsilon-web
      spec:
        containers:
        - image: upsilonproject/web:latest
          name: upsilon-web
          ports:
          - containerPort: 80
            protocol: TCP
          env:
            - name: CFG_DB_DSN
              value: "mysql:host=mysql;dbname=upsilon"
            - name: CFG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: database-user
            - name: CFG_DB_PASS
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: database-password
            - name: CFG_PASSWORD_SALT
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: local-password-salt
          livenessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - upsilon-web
        from:
          kind: ImageStreamTag
          name: upsilon-web:latest
      type: ImageChange
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: upsilon-drone
  spec:
    dockerImageRepository: upsilonproject/drone
- apiVersion: v1
  kind: Route
  metadata:
    name: upsilon-drone
  spec:
    to:
      kind: Service
      name: upsilon-drone
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: upsilon-web
  spec:
    dockerImageRepository: upsilonproject/web 
- apiVersion: v1
  kind: Route
  metadata:
    name: upsilon-web
  spec:
    to:
      kind: Service
      name: upsilon-web
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: upsilon-custodian
  spec:
    replicas: 1
    selector:
      deploymentconfig: upsilon-custodian
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          deploymentconfig: upsilon-custodian
      spec:
        containers:
        - image: upsilonproject/custodian:latest
          name: upsilon-custodian
          volumeMounts:
            - mountPath: /etc/upsilon-custodian
              name: custodian-cfg
        volumes:
          - configMap:
              defaultMode: 420
              name: custodian
            name: custodian-cfg

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: upsilon-custodian
  spec:
    dockerImageRepository: upsilonproject/custodian
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: upsilon-reactor
  spec:
    replicas: 1
    selector:
      deploymentconfig: upsilon-reactor
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          deploymentconfig: upsilon-reactor
      spec:
        containers:
        - image: upsilonproject/reactor:latest
          name: upsilon-reactor
          volumeMounts:
            - mountPath: /etc/upsilon-reactor
              name: reactor-cfg
        volumes:
          - configMap:
              defaultMode: 420
              name: reactor
            name: reactor-cfg
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: upsilon-reactor
  spec:
    dockerImageRepository: upsilonproject/reactor
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: upsilon-amqp
  spec:
    replicas: 1
    selector:
      deploymentconfig: upsilon-amqp
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          deploymentconfig: upsilon-amqp
      spec:
        containers:
        - image: luiscoms/openshift-rabbitmq:management
          name: upsilon-amqp
          ports:
          - containerPort: 15672
            protocol: TCP
          - containerPort: 5672
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 15672
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshhold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 15672
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: upsilon-amqp
  spec:
    dockerImageRepository: luiscoms/openshift-rabbitmq
- apiVersion: v1
  kind: Route
  metadata:
    name: amqp-mgmt
  spec:
    to:
      kind: Service
      name: amqp-mgmt
- apiVersion: v1
  kind: Service
  metadata:
    name: amqp-mgmt
  spec:
    ports:
    - port: 15672
      targetPort: 15672
    selector:
      deploymentconfig: upsilon-amqp
- apiVersion: v1
  kind: Service
  metadata:
    name: upsilon
  spec:
    ports:
    - port: 5672
      targetPort: 5672
    selector:
      deploymentconfig: upsilon-amqp
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: mysql
  spec:
    replicas: 1
    strategy:
      type: Recreate
    triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - mysql
          from:
            kind: ImageStreamTag
            namespace: openshift
            name: 'mysql:5.7'
    template:
      metadata:
        labels:
          name: mysql
      spec:
        volumes:
          - name: mysql-data
            persistentVolumeClaim:
              claimName: mysql
        containers:
          - name: mysql
            image: >-
              centos/mysql-57-centos7@sha256:54444d4e5c358aeb276b53889a9d714b410364b78fb5ca98791589ba0875762a
            ports:
              - containerPort: 3306
                protocol: TCP
            env:
              - name: MYSQL_USER
                valueFrom:
                  secretKeyRef:
                    name: mysql
                    key: database-user
              - name: MYSQL_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: mysql
                    key: database-password
              - name: MYSQL_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: mysql
                    key: database-root-password
              - name: MYSQL_DATABASE
                value: upsilon
            resources:
              limits:
                memory: 512Mi
            volumeMounts:
              - name: mysql-data
                mountPath: /var/lib/mysql/data
            livenessProbe:
              tcpSocket:
                port: 3306
              initialDelaySeconds: 30
              timeoutSeconds: 5
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            readinessProbe:
              exec:
                command:
                  - /bin/sh
                  - '-i'
                  - '-c'
                  - >-
                    MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER
                    -D $MYSQL_DATABASE -e 'SELECT 1'
              initialDelaySeconds: 5
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            terminationMessagePath: /dev/termination-log
            imagePullPolicy: IfNotPresent
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: reactor
  data:
    reactor.cfg: |+
      [amqp]
      host=upsilon
      queue=upsilon-reactor-recv

      [respond_all_results]
      listen=SERVICE_CHECK_RESULT
      filter=karma=bad
      react=log
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: custodian
  data:
    defaults.cfg: |+
      [database]
      user=upsilon
      pass=
      host=mysql

      [amqp]
      host=upsilon
      exchange=ex_upsilon
      queue=custodian
- apiVersion: v1
  kind: Secret
  metadata:
    name: mysql
  data:
    database-user: dXBzaWxvbg==
    database-password: ""
    database-root-password: ""
    local-password-salt: ""
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata: 
    name: mysql
  spec:
    resources:
      requests: 
        storage: 1Gi
    accessModes:
      - "ReadWriteOnce"
